"""
Django settings for DJANGO_PROJECT project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import os.path
from pathlib import Path

from django.conf.global_settings import LOGIN_REDIRECT_URL, MEDIA_ROOT, MEDIA_URL

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# For production security, get SECRET_KEY from environment variable or use default for dev
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-*v3^895-_e&e*^ud#$4^^=#(x_ta+vd0usks3nr0(qwi@2kiu$')

# SECURITY WARNING: don't run with debug turned on in production!
# In production, set this to False
DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

# Allow specific hosts in production or all in development
if DEBUG:
    ALLOWED_HOSTS = ['*']
else:
    ALLOWED_HOSTS = [os.environ.get('DJANGO_ALLOWED_HOST', 'blog-it.com'), 'www.blog-it.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Add the sites framework
    'blog.apps.BlogConfig',
    'users.apps.UsersConfig',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_summernote',
    'mcp_server',  # Add the mcp_server app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.DynamicSiteMiddleware',  # Add our custom middleware
]

ROOT_URLCONF = 'DJANGO_PROJECT.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_processors.popular_tags',
                # Comment out the AI tools context processor until it's properly set up
                'django_ai_tools.ai_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'DJANGO_PROJECT.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK='bootstrap5'
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
LOGIN_REDIRECT_URL = 'blog-home'
# LOGOUT_REDIRECT_URL = '/'  # Redirect to homepage after
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
# LOGIN_REDIRECT_URL = '/'  # Redirect to homepage after login
LOGOUT_REDIRECT_URL = '/'  # Redirect to homepage after logout
LOGOUT_RESET_REDIRECT = True
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
LOGIN_URL = 'login'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Password reset email settings
# Comment out the console backend for now
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_DEBUG = True  # Enable more verbose logging

# Use Gmail SMTP configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'amswars5559@gmail.com'
EMAIL_HOST_PASSWORD = 'ahml pnif jypf mkie'

# Set the default from email and site name for password reset
DEFAULT_FROM_EMAIL = 'Blog-It <amswars5559@gmail.com>'
SERVER_EMAIL = 'amswars5559@gmail.com'  # Server error emails
EMAIL_SUBJECT_PREFIX = '[Blog-It] '

# Site ID for the sites framework
SITE_ID = 1

# For development, override the site domain to use localhost
if DEBUG:
    SITE_URL = 'http://127.0.0.1:8000'
    DOMAIN_NAME = '127.0.0.1:8000'

SUMMERNOTE_CONFIG = {
    'iframe': True,
    'summernote': {
        'width': '100%',
        'height': '480px',  # Increased height for better editing experience
        'toolbar': [
            ['style', ['style']],
            ['font', ['bold', 'underline', 'clear']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']],
        ],
        'fontNames': ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana'],
        'callbacks': {
            'onInit': """
                function() {
                    console.log('Summernote initialized');
                }
            """,
        },
    },
    'css': (
        '//cdnjs.cloudflare.com/ajax/libs/codemirror/5.29.0/theme/monokai.min.css',
        '/static/css/summernote-custom.css',  # Include our custom CSS
    ),
    'codemirror': {
        'theme': 'monokai',
        'mode': 'htmlmixed',
        'lineNumbers': True,
        'lineWrapping': True,
    },
}

# Add the MCP server URL
MCP_SERVER_URL = 'http://localhost:8080'

# Security settings for production
if not DEBUG:
    # HTTPS/SSL settings
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000  # 1 year
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    
    # Content security
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    X_FRAME_OPTIONS = 'DENY'