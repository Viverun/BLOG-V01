services:
  # A web service for the Django application
  - type: web
    name: blog-app # You can change this to your preferred service name on Render
    env: python
    region: oregon # Or your preferred region (e.g., frankfurt, ohio, singapore)
    plan: free      # Defines the instance type for your web service
    buildCommand: ./build.sh # Command to build your application
    startCommand: cd DJANGO_PROJECT && gunicorn DJANGO_PROJECT.wsgi:application --log-file -
    autoDeploy: true # Set to 'false' if you prefer to manually trigger deploys for new commits
    healthCheckPath: / # Render will ping this path to check if your application is healthy.
    envVars:
      - key: PYTHON_VERSION
        value: "3.13.1"
      - key: DATABASE_URL
        fromDatabase:
          name: blog-db
          property: connectionString
      - key: DJANGO_SECRET_KEY
        generateValue: true
      - key: DJANGO_DEBUG
        value: "False" # Crucial for production
      - key: WEB_CONCURRENCY
        value: "2"
      - key: DJANGO_SETTINGS_MODULE
        value: DJANGO_PROJECT.settings
      - key: DJANGO_ALLOWED_HOSTS # Using Django's standard env var name (plural)
        value: $RENDER_EXTERNAL_HOSTNAME # Your settings.py will use .onrender.com
                                         # or should be updated to parse this if needed
                                         # e.g. ALLOWED_HOSTS.append(os.environ.get('RENDER_EXTERNAL_HOSTNAME'))
                                         # or parse a comma-separated list from DJANGO_ALLOWED_HOSTS
                                         # Given your current settings.py, the '.onrender.com' entry
                                         # already covers the Render service URL.

# A PostgreSQL database service
databases:
  - name: blog-db
    plan: free
    region: oregon
    databaseName: blogdb
    user: bloguser